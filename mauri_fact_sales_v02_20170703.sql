-- mauri
--------------------------------------------------------------------------------
-- Mauri Sales Fact

--------------------------------------------------------------------------------
-- Staging Plan

drop table if exists mauri.mauri_staging_sales_plan_v02;

create table mauri.mauri_staging_sales_plan_v02 as
with
fiscal_year_week_working_day_ratio as (
    select
        (year * 100) + seq_week_of_year as fiscal_year_week,
        calendar_date,
        total_working_days_week
    from mauri.mauri_dim_calendar_base
    where is_working_day
),
fiscal_year_week_plan as (
  select
      fiscal_year_period,
      fiscal_year_week,
      week_ending_date,
      sales_org,
      distribution_channel,
      division,
      currency_code,
      business_area_code,
      plant_code,
      customer_code,
      material_code,
      version_code,
      value_type_code,
      sum(total_cogs) as total_cogs,
      sum(raw_materials) as raw_materials,
      sum(net_sales_after_rebate) as net_sales_after_rebate,
      sum(packing_materials) as packing_materials,
      sum(dir_lab_cogs) as dir_lab_cogs,
      sum(overhead_cogs) as overhead_cogs,
      sum(freight_cogs) as freight_cogs,
      sum(ext_process_cogs) as ext_process_cogs,
      sum(gross_qty_tonnes) as gross_qty_tonnes,
      sum(gross_sales) as gross_sales,
      sum(net_qty_tonnes) as net_qty_tonnes,
      sum(net_sales) as net_sales,
      sum(gross_profit) as gross_profit,
      sum(gross_profit_at_std) as gross_profit_at_std,
      sum(gross_profit_gross_tonnes_sold) as gross_profit_gross_tonnes_sold,
      sum(gross_profit_net_tonnes_sold) as gross_profit_net_tonnes_sold,
      sum(cogs_net_tonnes_sold) as cogs_net_tonnes_sold,
      sum(net_sales_net_tonnes_sold) as net_sales_net_tonnes_sold,
      max(mor) as mor,
      max(mor_per_tonne) as mor_per_tonne,
      sum(rebates_other) as rebates_other,
      sum(rebate_promo_nat) as rebate_promo_nat,
      sum(rebate_trade_nat) as rebate_trade_nat,
      sum(gross_profit_after_rebate) as gross_profit_after_rebate,
      sum(rebate_coop) as rebate_coop,
      sum(rebate_trade_state) as rebate_trade_state,
      sum(rebate_settlement) as rebate_settlement,
      sum(rebate_advertising) as rebate_advertising,
      sum(transport_exp_nodim) as transport_exp_nodim,
      sum(warehouse_exp_nodim) as warehouse_exp_nodim,
      sum(gross_profit_at_std_after_wd_std) as gross_profit_at_std_after_wd_std,
      sum(factory_overhead_fixed) as factory_overhead_fixed,
      sum(factory_overhead_variable) as factory_overhead_variable,
      sum(labour_fixed) as labour_fixed,
      sum(labour_variable) as labour_variable,
      sum(total_cogs_at_standard) as total_cogs_at_standard,
      sum(wci_ext_processing) as wci_ext_processing,
      sum(ext_processes) as ext_processes,
      sum(ext_process_tn) as ext_process_tn,
      sum(sales_adjustments) as sales_adjustments,
      sum(sales_tonnes_qty) as sales_tonnes_qty,
      sales_tonnes_qty_uom,
      max(time_stamp) as time_stamp,
      max(sequence_number) as sequence_number
  from mauri.mauri_load_sales_plan_view
  group by
      fiscal_year_period,
      fiscal_year_week,
      week_ending_date,
      sales_org,
      distribution_channel,
      division,
      currency_code,
      business_area_code,
      plant_code,
      customer_code,
      material_code,
      version_code,
      value_type_code,
      sales_tonnes_qty_uom
)
select
    p.fiscal_year_period,
    p.fiscal_year_week,
    r.calendar_date,
    p.week_ending_date,
    p.sales_org,
    p.distribution_channel,
    p.division,
    p.currency_code,
    p.business_area_code,
    p.plant_code,
    p.customer_code,
    p.material_code,
    p.version_code,
    p.value_type_code,
    cast(nvl(p.total_cogs, 0) / r.total_working_days_week as decimal(17, 3)) as total_cogs,
    cast(nvl(p.raw_materials, 0) / r.total_working_days_week as decimal(17, 3)) as raw_materials,
    cast(nvl(p.net_sales_after_rebate, 0) / r.total_working_days_week as decimal(17, 3)) as net_sales_after_rebate,
    cast(nvl(p.packing_materials, 0) / r.total_working_days_week as decimal(17, 3)) as packing_materials,
    cast(nvl(p.dir_lab_cogs, 0) / r.total_working_days_week as decimal(17, 3)) as dir_lab_cogs,
    cast(nvl(p.overhead_cogs, 0) / r.total_working_days_week as decimal(17, 3)) as overhead_cogs,
    cast(nvl(p.freight_cogs, 0) / r.total_working_days_week as decimal(17, 3)) as freight_cogs,
    cast(nvl(p.ext_process_cogs, 0) / r.total_working_days_week as decimal(17, 3)) as ext_process_cogs,
    cast(nvl(p.gross_qty_tonnes, 0) / r.total_working_days_week as decimal(17, 3)) as gross_qty_tonnes,
    cast(nvl(p.gross_sales, 0) / r.total_working_days_week as decimal(17, 3)) as gross_sales,
    cast(nvl(p.net_qty_tonnes, 0) / r.total_working_days_week as decimal(17, 3)) as net_qty_tonnes,
    cast(nvl(p.net_sales, 0) / r.total_working_days_week as decimal(17, 3)) as net_sales,
    cast(nvl(p.gross_profit, 0) / r.total_working_days_week as decimal(17, 3)) as gross_profit,
    cast(nvl(p.gross_profit_at_std, 0) / r.total_working_days_week as decimal(17, 3)) as gross_profit_at_std,
    cast(nvl(p.gross_profit_gross_tonnes_sold, 0) / r.total_working_days_week as decimal(17, 3)) as gross_profit_gross_tonnes_sold,
    cast(nvl(p.gross_profit_net_tonnes_sold, 0) / r.total_working_days_week as decimal(17, 3)) as gross_profit_net_tonnes_sold,
    cast(nvl(p.cogs_net_tonnes_sold, 0) / r.total_working_days_week as decimal(17, 3)) as cogs_net_tonnes_sold,
    cast(nvl(p.net_sales_net_tonnes_sold, 0) / r.total_working_days_week as decimal(17, 3)) as net_sales_net_tonnes_sold,
    p.mor,
    p.mor_per_tonne,
    cast(nvl(p.rebates_other, 0) / r.total_working_days_week as decimal(17, 3)) as rebates_other,
    cast(nvl(p.rebate_promo_nat, 0) / r.total_working_days_week as decimal(17, 3)) as rebate_promo_nat,
    cast(nvl(p.rebate_trade_nat, 0) / r.total_working_days_week as decimal(17, 3)) as rebate_trade_nat,
    cast(nvl(p.gross_profit_after_rebate, 0) / r.total_working_days_week as decimal(17, 3)) as gross_profit_after_rebate,
    cast(nvl(p.rebate_coop, 0) / r.total_working_days_week as decimal(17, 3)) as rebate_coop,
    cast(nvl(p.rebate_trade_state, 0) / r.total_working_days_week as decimal(17, 3)) as rebate_trade_state,
    cast(nvl(p.rebate_settlement, 0) / r.total_working_days_week as decimal(17, 3)) as rebate_settlement,
    cast(nvl(p.rebate_advertising, 0) / r.total_working_days_week as decimal(17, 3)) as rebate_advertising,
    cast(nvl(p.transport_exp_nodim, 0) / r.total_working_days_week as decimal(17, 3)) as transport_exp_nodim,
    cast(nvl(p.warehouse_exp_nodim, 0) / r.total_working_days_week as decimal(17, 3)) as warehouse_exp_nodim,
    cast(nvl(p.gross_profit_at_std_after_wd_std, 0) / r.total_working_days_week as decimal(17, 3)) as gross_profit_at_std_after_wd_std,
    cast(nvl(p.factory_overhead_fixed, 0) / r.total_working_days_week as decimal(17, 3)) as factory_overhead_fixed,
    cast(nvl(p.factory_overhead_variable, 0) / r.total_working_days_week as decimal(17, 3)) as factory_overhead_variable,
    cast(nvl(p.labour_fixed, 0) / r.total_working_days_week as decimal(17, 3)) as labour_fixed,
    cast(nvl(p.labour_variable, 0) / r.total_working_days_week as decimal(17, 3)) as labour_variable,
    cast(nvl(p.total_cogs_at_standard, 0) / r.total_working_days_week as decimal(17, 3)) as total_cogs_at_standard,
    cast(nvl(p.wci_ext_processing, 0) / r.total_working_days_week as decimal(17, 3)) as wci_ext_processing,
    cast(nvl(p.ext_processes, 0) / r.total_working_days_week as decimal(17, 3)) as ext_processes,
    cast(nvl(p.ext_process_tn, 0) / r.total_working_days_week as decimal(17, 3)) as ext_process_tn,
    cast(nvl(p.sales_adjustments, 0) / r.total_working_days_week as decimal(17, 3)) as sales_adjustments,
    cast(nvl(p.sales_tonnes_qty, 0) / r.total_working_days_week as decimal(17, 3)) as sales_tonnes_qty,
    p.sales_tonnes_qty_uom,
    p.time_stamp,
    p.sequence_number
from fiscal_year_week_plan as p
join fiscal_year_week_working_day_ratio as r
on p.fiscal_year_week = r.fiscal_year_week
;

--------------------------------------------------------------------------------
-- Fact

drop table if exists mauri.mauri_fact_sales_v02;

create table mauri.mauri_fact_sales_v02
    interleaved sortkey (
        reporting_date,
        sales_org,
        version,
        value_type_code,
        _currency_node_key,
        _business_area_node_key,
        _customer_node_key,
        _material_node_key
    )
    distkey (reporting_date)
as
with
txn_actual as (
    select
        cast('Actual' as varchar(6)) as fact_type,
        fiscal_year_period,
        fiscal_year_week,
        cast(null as date) as calendar_date,
        week_ending_date,
        sales_org,
        distribution_channel,
        division,
        currency_code,
        business_area_code,
        plant_code,
        customer_code,
        material_code,
        version_code,
        value_type_code,
        total_cogs,
        raw_materials,
        net_sales_after_rebate,
        packing_materials,
        dir_lab_cogs,
        overhead_cogs,
        freight_cogs,
        ext_process_cogs,
        gross_qty_tonnes,
        gross_sales,
        net_qty_tonnes,
        net_sales,
        gross_profit,
        gross_profit_at_std,
        gross_profit_gross_tonnes_sold,
        gross_profit_net_tonnes_sold,
        cogs_net_tonnes_sold,
        net_sales_net_tonnes_sold,
        mor,
        mor_per_tonne,
        rebates_other,
        rebate_promo_nat,
        rebate_trade_nat,
        gross_profit_after_rebate,
        rebate_coop,
        rebate_trade_state,
        rebate_settlement,
        rebate_advertising,
        transport_exp_nodim,
        warehouse_exp_nodim,
        gross_profit_at_std_after_wd_std,
        factory_overhead_fixed,
        factory_overhead_variable,
        labour_fixed,
        labour_variable,
        total_cogs_at_standard,
        wci_ext_processing,
        ext_processes,
        ext_process_tn,
        sales_adjustments,
        sales_tonnes_qty,
        sales_tonnes_qty_uom,
        time_stamp,
        sequence_number
    from mauri.mauri_load_sales_actual_view
),
txn_plan as (
    select
        cast('Plan' as varchar(6)) as fact_type,
        fiscal_year_period,
        fiscal_year_week,
        calendar_date,
        week_ending_date,
        sales_org,
        distribution_channel,
        division,
        currency_code,
        business_area_code,
        plant_code,
        customer_code,
        material_code,
        version_code,
        value_type_code,
        total_cogs,
        raw_materials,
        net_sales_after_rebate,
        packing_materials,
        dir_lab_cogs,
        overhead_cogs,
        freight_cogs,
        ext_process_cogs,
        gross_qty_tonnes,
        gross_sales,
        net_qty_tonnes,
        net_sales,
        gross_profit,
        gross_profit_at_std,
        gross_profit_gross_tonnes_sold,
        gross_profit_net_tonnes_sold,
        cogs_net_tonnes_sold,
        net_sales_net_tonnes_sold,
        mor,
        mor_per_tonne,
        rebates_other,
        rebate_promo_nat,
        rebate_trade_nat,
        gross_profit_after_rebate,
        rebate_coop,
        rebate_trade_state,
        rebate_settlement,
        rebate_advertising,
        transport_exp_nodim,
        warehouse_exp_nodim,
        gross_profit_at_std_after_wd_std,
        factory_overhead_fixed,
        factory_overhead_variable,
        labour_fixed,
        labour_variable,
        total_cogs_at_standard,
        wci_ext_processing,
        ext_processes,
        ext_process_tn,
        sales_adjustments,
        sales_tonnes_qty,
        sales_tonnes_qty_uom,
        time_stamp,
        sequence_number
    from mauri.mauri_staging_sales_plan_v02
),
txn_all as (
    select * from txn_actual
    union all select * from txn_plan
)
select
    cast(nvl(txn.fact_type, '#') as varchar(6)) as fact_type,
    cast('Total' as varchar(5)) as flag_total,
    cast(left(nvl(txn.fiscal_year_period, 0), 4)||'.'||right(nvl(txn.fiscal_year_period, 0), 2) as decimal(6, 2)) as fiscal_year_period,
    cast(nvl(txn.fiscal_year_week, 0) / 100.0 as decimal(6, 2)) as fiscal_year_week,
    cast(nvl(txn.calendar_date, null) as date) as calendar_date,
    cast(nvl(txn.week_ending_date, null) as date) as week_ending_date,
    cast(nvl(txn.calendar_date, txn.week_ending_date) as date) as reporting_date,
    cast(nvl(txn.sales_org, '#') as varchar(4)) as sales_org,
    cast(nvl(txn.distribution_channel, '#') as varchar(2)) as distribution_channel,
    cast(nvl(txn.division, '#') as varchar(2)) as division,
    cast(nvl(txn.currency_code, '#') as varchar(5)) as transaction_currency_code,
    cast(nvl(currency._currency_node_key, 0) as bigint) as _currency_node_key,
    cast(nvl(txn.business_area_code, '#') as varchar(5)) as business_area_code,
    cast(nvl(business._business_area_node_key, 0) as bigint) as _business_area_node_key,
    cast(nvl(txn.plant_code, '#') as varchar(5)) as plant_code,
    cast(nvl(txn.customer_code, '#') as varchar(20)) as customer_code,
    cast(nvl(customer._customer_node_key, 0) as bigint) as _customer_node_key,
    cast(nvl(txn.material_code, '#') as varchar(18)) as material_code,
    cast(nvl(material._material_node_key, 0) as bigint) as _material_node_key,
    cast(nvl(txn.value_type_code, '#') as varchar(5)) as value_type_code,
    cast(nvl(txn.version_code, '#') as varchar(5)) as version_code,
    cast(case when fact_type = 'Actual' then fact_type else nvl(version.version_text, '*'||txn.version_code) end as varchar(50)) as version,
    --
    cast(nvl(txn.total_cogs, 0) as decimal(17, 3)) as total_cogs,
    cast(nvl(txn.raw_materials, 0) as decimal(17, 3)) as raw_materials,
    cast(nvl(txn.net_sales_after_rebate, 0) as decimal(17, 3)) as net_sales_after_rebate,
    cast(nvl(txn.packing_materials, 0) as decimal(17, 3)) as packing_materials,
    cast(nvl(txn.dir_lab_cogs, 0) as decimal(17, 3)) as dir_lab_cogs,
    cast(nvl(txn.overhead_cogs, 0) as decimal(17, 3)) as overhead_cogs,
    cast(nvl(txn.freight_cogs, 0) as decimal(17, 3)) as freight_cogs,
    cast(nvl(txn.ext_process_cogs, 0) as decimal(17, 3)) as ext_process_cogs,
    cast(nvl(txn.gross_qty_tonnes, 0) as decimal(17, 3)) as gross_qty_tonnes,
    cast(nvl(txn.gross_sales, 0) as decimal(17, 3)) as gross_sales,
    cast(nvl(txn.net_qty_tonnes, 0) as decimal(17, 3)) as net_qty_tonnes,
    cast(nvl(txn.net_sales, 0) as decimal(17, 3)) as net_sales,
    cast(nvl(txn.gross_profit, 0) as decimal(17, 3)) as gross_profit,
    cast(nvl(txn.gross_profit_at_std, 0) as decimal(17, 3)) as gross_profit_at_std,
    -- cast(nvl(txn.gross_profit_gross_tonnes_sold, 0) as decimal(17, 3)) as gross_profit_gross_tonnes_sold,
    -- cast(nvl(txn.gross_profit_net_tonnes_sold, 0) as decimal(17, 3)) as gross_profit_net_tonnes_sold,
    -- cast(nvl(txn.cogs_net_tonnes_sold, 0) as decimal(17, 3)) as cogs_net_tonnes_sold,
    -- cast(nvl(txn.net_sales_net_tonnes_sold, 0) as decimal(17, 3)) as net_sales_net_tonnes_sold,
    cast(nvl(txn.mor, 0) as decimal(17, 3)) as mor,
    -- cast(nvl(txn.mor_per_tonne, 0) as decimal(17, 3)) as mor_per_tonne,
    --
    cast(
        nvl(txn.rebate_advertising, 0) +
        nvl(txn.rebate_coop, 0) +
        nvl(txn.rebate_promo_nat, 0) +
        nvl(txn.rebate_settlement, 0) +
        nvl(txn.rebate_trade_nat, 0) +
        nvl(txn.rebate_trade_state, 0) +
        nvl(txn.rebates_other, 0)
        as decimal(17, 3)
    ) as total_discounts_and_rebates,
    --
    cast(nvl(txn.rebates_other, 0) as decimal(17, 3)) as rebates_other,
    cast(nvl(txn.rebate_promo_nat, 0) as decimal(17, 3)) as rebate_promo_nat,
    cast(nvl(txn.rebate_trade_nat, 0) as decimal(17, 3)) as rebate_trade_nat,
    cast(nvl(txn.gross_profit_after_rebate, 0) as decimal(17, 3)) as gross_profit_after_rebate,
    cast(nvl(txn.rebate_coop, 0) as decimal(17, 3)) as rebate_coop,
    cast(nvl(txn.rebate_trade_state, 0) as decimal(17, 3)) as rebate_trade_state,
    cast(nvl(txn.rebate_settlement, 0) as decimal(17, 3)) as rebate_settlement,
    cast(nvl(txn.rebate_advertising, 0) as decimal(17, 3)) as rebate_advertising,
    cast(nvl(txn.transport_exp_nodim, 0) as decimal(17, 3)) as transport_exp_nodim,
    cast(nvl(txn.warehouse_exp_nodim, 0) as decimal(17, 3)) as warehouse_exp_nodim,
    cast(nvl(txn.gross_profit_at_std_after_wd_std, 0) as decimal(17, 3)) as gross_profit_at_std_after_wd_std,
    cast(nvl(txn.factory_overhead_fixed, 0) as decimal(17, 3)) as factory_overhead_fixed,
    cast(nvl(txn.factory_overhead_variable, 0) as decimal(17, 3)) as factory_overhead_variable,
    cast(nvl(txn.labour_fixed, 0) as decimal(17, 3)) as labour_fixed,
    cast(nvl(txn.labour_variable, 0) as decimal(17, 3)) as labour_variable,
    cast(nvl(txn.total_cogs_at_standard, 0) as decimal(17, 3)) as total_cogs_at_standard,
    cast(nvl(txn.wci_ext_processing, 0) as decimal(17, 3)) as wci_ext_processing,
    cast(nvl(txn.ext_processes, 0) as decimal(17, 3)) as ext_processes,
    cast(nvl(txn.ext_process_tn, 0) as decimal(17, 3)) as ext_process_tn,
    cast(nvl(txn.sales_adjustments, 0) as decimal(17, 3)) as sales_adjustments,
    cast(nvl(txn.sales_tonnes_qty, 0) as decimal(17, 3)) as sales_tonnes_qty,
    cast(nvl(txn.sales_tonnes_qty_uom, '#') as varchar(5)) as sales_tonnes_qty_uom,
    cast(nvl(txn.time_stamp, null) as timestamp without time zone) as time_stamp,
    cast(nvl(txn.sequence_number, '#') as varchar(10)) as sequence_number
from txn_all as txn
left join common.gwf_dim_versions_v02 as version
    on nvl(txn.version_code, '#') = version.version_code
left join common.gwf_dim_currency_node_flat_v02 as currency
    on nvl(left(txn.fiscal_year_period, 4)||'|'||trim(txn.currency_code), '#') = currency._currency_node_key_text
left join common.gwf_dim_business_area_node_xref_v02 as business
    on nvl(txn.business_area_code, '#') = business._business_area_node_key_text
left join common.gwf_dim_customer_node_xref_v02 as customer
    on 'CUS|'||nvl(txn.sales_org, '#')||'|'||nvl(txn.distribution_channel, '#')||'|'||nvl(txn.division, '#')||'|'||nvl(txn.customer_code, '#') = customer._customer_node_key_text
left join common.gwf_dim_material_node_xref_v02 as material
    on 'MAT|'||nvl(txn.sales_org, '#')||'|'||nvl(txn.distribution_channel, '#')||'|'||nvl(txn.material_code, '#') = material._material_node_key_text
;

--------------------------------------------------------------------------------
-- View

-- drop view if exists mauri.mauri_fact_sales_view;

create view mauri.mauri_fact_sales_view
as
select
    fact.fact_type,
    fact.flag_total,
    fact.fiscal_year_period,
    fact.fiscal_year_week,
    -- fact.calendar_date,
    fact.week_ending_date,
    fact.reporting_date,
    fact.sales_org,
    fact.distribution_channel,
    fact.division,
    fact.transaction_currency_code,
    -- fact._currency_node_key,
    fact.business_area_code as transaction_business_area_code,
    -- fact._business_area_node_key,
    fact.plant_code,
    fact.customer_code as transaction_customer_code,
    -- fact._customer_node_key,
    fact.material_code as transaction_material_code,
    -- fact._material_node_key,
    fact.value_type_code,
    fact.version_code,
    fact.version,
    --
    fact.total_cogs,
    fact.raw_materials,
    fact.net_sales_after_rebate,
    fact.packing_materials,
    fact.dir_lab_cogs,
    fact.overhead_cogs,
    fact.freight_cogs,
    fact.ext_process_cogs,
    fact.gross_qty_tonnes,
    fact.gross_sales,
    fact.net_qty_tonnes,
    fact.net_sales,
    fact.gross_profit,
    fact.gross_profit_at_std,
    fact.mor,
    fact.total_discounts_and_rebates,
    fact.rebates_other,
    fact.rebate_promo_nat,
    fact.rebate_trade_nat,
    fact.gross_profit_after_rebate,
    fact.rebate_coop,
    fact.rebate_trade_state,
    fact.rebate_settlement,
    fact.rebate_advertising,
    fact.transport_exp_nodim,
    fact.warehouse_exp_nodim,
    fact.gross_profit_at_std_after_wd_std,
    fact.factory_overhead_fixed,
    fact.factory_overhead_variable,
    fact.labour_fixed,
    fact.labour_variable,
    fact.total_cogs_at_standard,
    fact.wci_ext_processing,
    fact.ext_processes,
    fact.ext_process_tn,
    fact.sales_adjustments,
    fact.sales_tonnes_qty,
    fact.sales_tonnes_qty_uom,
    fact.time_stamp,
    fact.sequence_number,
    --
    -- currency._currency_node_key_text,
    -- currency._currency_node_key,
    -- currency.fiscal_year,
    -- currency.transaction_currency_code,
    currency.exchange_rate_multiplier_aud,
    -- currency.exchange_rate_multiplier_gbp,
    currency.exchange_rate_multiplier_nzd,
    --
    -- business._business_area_node_key_text,
    -- business._business_area_node_key,
    -- business._seq,
    business.business_area_node_level,
    business.business_area_node_id,
    business.business_area_node_code,
    business.business_area_node_desc,
    business.business_area_node_full_desc,
    business.l01_business_area_id,
    business.l01_business_area_code,
    business.l01_business_area_desc,
    business.l02_business_area_id,
    business.l02_business_area_code,
    business.l02_business_area_desc,
    business.l03_business_area_id,
    business.l03_business_area_code,
    business.l03_business_area_desc,
    business.l04_business_area_id,
    business.l04_business_area_code,
    business.l04_business_area_desc,
    business.l05_business_area_id,
    business.l05_business_area_code,
    business.l05_business_area_desc,
    business.l06_business_area_id,
    business.l06_business_area_code,
    business.l06_business_area_desc,
    business.l07_business_area_id,
    business.l07_business_area_code,
    business.l07_business_area_desc,
    business.l08_business_area_id,
    business.l08_business_area_code,
    business.l08_business_area_desc,
    business.l09_business_area_id,
    business.l09_business_area_code,
    business.l09_business_area_desc,
    -- business.l10_business_area_id,
    -- business.l10_business_area_code,
    -- business.l10_business_area_desc,
    -- business.l11_business_area_id,
    -- business.l11_business_area_code,
    -- business.l11_business_area_desc,
    -- business.l12_business_area_id,
    -- business.l12_business_area_code,
    -- business.l12_business_area_desc,
    -- business.l13_business_area_id,
    -- business.l13_business_area_code,
    -- business.l13_business_area_desc,
    -- business.l14_business_area_id,
    -- business.l14_business_area_code,
    -- business.l14_business_area_desc,
    -- business._collision_count as business_area_collision_count,
    --
    -- customer._customer_node_key_text,
    -- customer._customer_node_key,
    -- customer._seq,
    customer.customer_node_type,
    customer.customer_node_code,
    customer.customer_node_text,
    customer.customer_node_full_text,
    customer.sales_org as customer_sales_org,
    customer.distribution_channel as customer_distribution_channel,
    customer.division as customer_division,
    customer.customer_code,
    customer.customer_text,
    customer.sales_org_customer_text,
    customer.normal_route_code,
    customer.normal_route_text,
    customer.customer_account_group_code,
    -- customer.customer_account_group_text,
    customer.banner_code,
    customer.banner_text,
    customer.banner_group_code,
    customer.banner_group_text,
    -- customer.outlet_category_code,
    -- customer.outlet_category_text,
    customer.address_code,
    -- customer.address_text,
    customer.country_code,
    customer.country_text,
    customer.street_text,
    customer.post_code,
    customer.city,
    -- customer.customer_l00_code,
    -- customer.customer_l00_text,
    customer.customer_l01_code,
    customer.customer_l01_text,
    customer.customer_l02_code,
    customer.customer_l02_text,
    customer.customer_l03_code,
    customer.customer_l03_text,
    customer.customer_l04_code,
    customer.customer_l04_text,
    customer.customer_l05_code,
    customer.customer_l05_text,
    customer.customer_l06_code,
    customer.customer_l06_text,
    -- customer.customer_l07_code,
    -- customer.customer_l07_text,
    -- customer.customer_l08_code,
    -- customer.customer_l08_text,
    customer.sales_office_code,
    customer.sales_office_text,
    customer.sales_group_code,
    customer.sales_group_text,
    -- customer.owner_driver_code,
    -- customer.owner_driver_text,
    customer.area_manager_code,
    customer.area_manager_desc,
    customer.sales_org_customer_post_code,
    customer.customer_group_code,
    customer.customer_group_text,
    customer.customer_group_3_code,
    customer.customer_group_3_text,
    -- customer.sales_viewpoint_customer_code,
    -- customer.sales_viewpoint_customer_text,
    customer.customer_area_code,
    -- customer.customer_area_text,
    customer.customer_district_code,
    -- customer.customer_district_text,
    customer.customer_group_2_code,
    -- customer.customer_group_2_text,
    customer.customer_price_group_code,
    -- customer.customer_price_group_text,
    customer.customer_price_group_1_code,
    customer.customer_price_group_1_text,
    customer.delivery_priority_code,
    -- customer.delivery_priority_text,
    customer.sales_rep_code,
    customer.sales_rep_text,
    customer.account_assignment_code,
    customer.account_assignment_text,
    customer.line_of_business_code,
    customer.line_of_business_text,
    customer.major_customer_group_code,
    -- customer.major_customer_group_text,
    customer.minor_customer_group_code,
    -- customer.minor_customer_group_text,
    customer.national_account_code,
    -- customer.national_account_text,
    customer.payment_terms_code,
    customer.payment_terms_text,
    -- customer.purchase_order_required_code,
    -- customer.purchase_order_required_text,
    customer.region_code,
    -- customer.region_text,
    customer.sales_clerk_code,
    -- customer.sales_clerk_text,
    customer.store_department_code,
    -- customer.store_department_text,
    customer.sap_payer_code,
    -- customer.sap_payer_text,
    customer.plant_code as customer_plant_code,
    customer.plant_text as customer_plant_text,
    customer.business_area_code as customer_business_area_code,
    customer.sales_district_code,
    customer.sales_district_text,
    -- customer._customer_count,
    -- customer._sales_org_customer_count,
    -- customer._sales_org_customer_tt_hier_count,
    -- customer._sales_org_customer_wm_hier_count,
    -- customer._collision_count as customer_node_collision_count,
    --
    -- material._material_node_key_text,
    -- material._material_node_key,
    -- material._seq,
    material.material_node_type,
    material.material_node_code,
    material.material_node_text,
    material.material_node_full_text,
    material.sales_org as material_sales_org,
    material.distribution_channel as material_distribution_channel,
    material.material_code,
    material.material_text,
    material.sales_org_material_text,
    material.brand_code,
    material.brand_text,
    -- material.customer_material_code,
    material.consumer_uom,
    -- material.content_uom,
    material.ean_code,
    material.external_material_group,
    material.fpu_conversion_rate,
    -- material.height,
    -- material.length,
    -- material.width,
    material.previous_material_code,
    material.order_uom,
    material.price_band_category_code,
    material.volume,
    material.volume_uom,
    material.weight_uom,
    -- material.dimension_uom,
    -- material.topup_view_3_code,
    -- material.topup_view_3_text,
    material.sales_org_material_group_code,
    material.sales_org_material_group_text,
    material.material_sub_group_code,
    material.material_sub_group_text,
    material.material_segment_code,
    -- material.material_segment_text,
    material.brand_name_code,
    material.brand_name_text,
    material.material_category_code,
    material.material_category_text,
    material.material_major_code,
    material.material_major_text,
    material.material_group_code,
    material.material_group_text,
    -- material.proprietary_code,
    -- material.proprietary_text,
    -- material.family_code,
    -- material.family_text,
    -- material.segment_code,
    material.base_uom,
    -- material.base_uom_text,
    material.basic_material_code,
    material.basic_material_text,
    material.brand_for_b_and_c_code,
    material.brand_for_b_and_c_text,
    -- material.proprietary_group_code,
    -- material.proprietary_group_text,
    material.coles_material_code,
    material.coles_material_text,
    material.material_deletion_flag,
    -- material.fs_product_group_code,
    -- material.fs_product_group_text,
    material.gross_weight,
    material.kg_per_carton,
    material.kg_per_each,
    -- material.material_group_3_code,
    -- material.material_group_3_text,
    material.sales_org_material_price_group_code,
    -- material.sales_org_material_price_group_text,
    -- material.material_pack_type_code,
    -- material.material_pack_type_text,
    -- material.material_ownership_code,
    -- material.material_ownership_text,
    -- material.material_status_mm_pp,
    material.material_sub_segment_code,
    material.material_sub_segment_text,
    material.material_type_code,
    material.material_type_text,
    material.net_weight,
    material.material_price_group_code,
    material.material_price_group_text,
    material.material_reporting_group_code,
    material.material_reporting_group_text,
    material.material_hier_code,
    -- material.material_hier_text,
    -- material.segment_text,
    material.project_name_code,
    -- material.project_name_text,
    -- material.production_stream,
    -- material.production_sub_stream,
    -- material.random_weight_code,
    material.random_weight_text,
    material.sales_org_deletion_flag,
    material.dsb_ratio,
    material.sales_attribute_4_code
    -- material.sales_attribute_4_text,
    -- material._collision_count as material_collision_count,
    --
from mauri.mauri_fact_sales_v02 as fact
inner join common.gwf_dim_business_area_node_v02 as business
    on fact._business_area_node_key = business._business_area_node_key
inner join common.gwf_dim_currency_node_flat_v02 as currency
    on fact._currency_node_key = currency._currency_node_key
inner join common.gwf_dim_customer_node_v02 as customer
    on fact._customer_node_key = customer._customer_node_key
inner join common.gwf_dim_material_node_v02 as material
    on fact._material_node_key = material._material_node_key
;

--------------------------------------------------------------------------------
-- grant select on mauri.mauri_staging_sales_plan_v02 to eenlvsglzl_reader;
-- grant select on mauri.mauri_fact_sales_v02 to eenlvsglzl_reader;
grant select on mauri.mauri_fact_sales_view to mauri_reader;

--------------------------------------------------------------------------------
-- END
--------------------------------------------------------------------------------
